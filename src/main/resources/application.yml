spring:
  datasource:
    url: jdbc:h2:tcp://localhost/~/jpashop; #MVCC=TRUE
    #MVCC=TRUE 옵션 넣어주면 여러개의 DB를 한번에 접근할 때 더 빠르게 처리됨, 넣어주는게 권장임
    #H2 1.4.200 버전부터 MVCC 옵션이 제거되어, 작성하지 않는 것이 맞음.
    username: sa
    password:
    driver-class-name: org.h2.Driver

  jpa:
    hibernate:
      ddl-auto: create
      #자동으로 table을 만들어주는 mode
      #Application 실행 시점에 내가 가지고 있는 정보를 모두 지우고 다시 생성함.
      #실행시점에 모든 테이블을 지우고 재생성하기때문에 운영 환경에서는 절대 create 모드를 사용하면 안됨.
      #내렸다 다시 올리면 기존 데이터가 몽땅 사라지는 매직..
    properties:
      hibernate:
        #show_sql: true
        #hibernate가 생성하는 sql이 모두 보이게 하는 옵션
        #운영 환경에서 log들은 System.out으로 찍으면 절대 안됨
        format_sql: true

logging:
  level:
    org.hibernate.SQL: debug
    #hibernate가 생성하는 sql이 모두 보이는 option
    #위의 show_sql과의 차이점 : show_sql은 System.out으로 log를 찍고, org.hibernate.SQL은 logger를 활용해서 log를 찍음
    org.hibernate.type: trace
    #이 옵션을 넣으면 log에 쿼리 파라미터가 ?가 나오는거를 따로 값으로 (아래쪽에 표시해줌.)
    #외부 라이브러리(spring-boot-data-source-decorator)를 사용하면 (? 자리에 바로 값이 나오게 할수도 있음.)
